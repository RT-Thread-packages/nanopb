/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_AMESSAGE_PB_H_INCLUDED
#define PB_AMESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _AMessage {
    int32_t aa;
    int32_t bb;
/* @@protoc_insertion_point(struct:AMessage) */
} AMessage;


/* Initializer values for message structs */
#define AMessage_init_default                    {0, 0}
#define AMessage_init_zero                       {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define AMessage_aa_tag                          1
#define AMessage_bb_tag                          2

/* Struct field encoding specification for nanopb */
#define AMessage_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, aa, 1) \
X(a, STATIC, SINGULAR, INT32, bb, 2)
#define AMessage_CALLBACK NULL
#define AMessage_DEFAULT NULL

extern const pb_msgdesc_t AMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AMessage_fields &AMessage_msg

/* Maximum encoded size of messages (where known) */
#define AMessage_size                            22

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
